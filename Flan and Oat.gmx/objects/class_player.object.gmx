<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>class_nonGUI</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spawn check
if !instance_exists(data_player) instance_create(x, y, data_player);
if !instance_exists(gui_camera) instance_create(x, y, gui_camera);
if !instance_exists(controller_depth) instance_create(x, y, controller_depth);
if !instance_exists(controller_pause) instance_create(x, y, controller_pause);
if !instance_exists(data_inventory) instance_create(x, y, data_inventory);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables 
move_speed = 0;
move_speed_max = 150;
move_accel = 10;
move_friction = 7;
move_direction = 0;
allowMovement = true;

movement_inputs[0] = ord("D");
movement_inputs[1] = ord("W");
movement_inputs[2] = ord("A");
movement_inputs[3] = ord("S");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement
if allowMovement {
    var seconds_passed = delta_time/1000000;
    var move_speed_this_frame = move_speed * seconds_passed;
    
    var move_xinput = 0;
    var move_yinput = 0;
    
    for (var i = 0; i &lt; array_length_1d(movement_inputs); i++) {
        var this_key = movement_inputs[i];
        if keyboard_check(this_key) {
            move_direction = i * 90;
            move_xinput += lengthdir_x(1, move_direction);
            move_yinput += lengthdir_y(1, move_direction);
            move_speed += move_accel;
        }
    }
    
    var moving = (point_distance(0, 0, move_xinput, move_yinput) &gt; 0);
    
    move_speed -= move_friction;
    move_speed = clamp(move_speed, 0, move_speed_max);
    
    if move_speed {
        if moving var move_angle = point_direction(0, 0, move_xinput, move_yinput);
        else var move_angle = move_direction;
        move_step(move_speed_this_frame, move_angle, class_wall);
    } 
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Room Checks
if room != rm_pause_menu &amp;&amp; room != rm_map &amp;&amp; room != rm_combat {
    if !instance_exists(gui_camera) instance_create(x, y, gui_camera);
    visible = true;
}
if room != rm_pause_menu persistent = true;
if room == rm_map || room == rm_combat allowMovement = false;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Combat
char_select();

atk = data_player.atk;
def = data_player.def;
spd = data_player.spd;
acc = data_player.acc;
hp = data_player.hp;
maxhp = data_player.maxhp;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
