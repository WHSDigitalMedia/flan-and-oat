<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_wall</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>original = noone;
for (var i = 0; i &lt; 14; i++) {
    add_enemy[i] = noone;
}
first = false; //true means enemies go first
cur_active = noone;
select_mode = false;
move_to_use = "";
targ = noone;
init_moves = false;

enemy_queue = ds_priority_create();
player_queue = ds_priority_create();

//creates enemy combat grid
e_left = 928; //horizontally
e_right = 1056;
e_init = 96; //vertically
e_space = 96;
e_rows = 4;

//creates player combat grid
p_left = 192;
p_right = 256;
p_init = 160;
p_space = 64;
p_rows = 3;

//placement of stuffs, 0 = x, 1 = y
box_padding = 16;
text_padding = 16;
corner_rad = 5;
actual_width = room_width - (4 * box_padding);
textScale = 0.15;

//Description Boxes
desc_box_left_corner[0] = 16;
desc_box_left_corner[1] = room_height * 0.75;
desc_box_width = actual_width * 0.7;
desc_box_height = room_height * 0.25;

char_box_left_corner[0] = desc_box_left_corner[0] + desc_box_width + box_padding;
char_box_left_corner[1] = desc_box_left_corner[1];
char_box_width = actual_width * 0.3;
char_box_height = desc_box_height;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>room</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>rm_combat</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///check to see if anyone died
for (var i = 0; i &lt; instance_number(class_enemy); i++) {
    var inst = instance_find(class_enemy, i);
    if inst.hp &lt;= 0 {
        with (inst) {
            instance_destroy();
        }
    }
}

if !instance_exists(class_enemy) || class_player.hp &lt;= 0 {
    pause_game();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>room</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>rm_combat</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enemy combat
if instance_exists(cur_active) &amp;&amp; cur_active.object_index == class_enemy {
    //selects a move at random then uses it
    var move_no = string(irandom_range(1, 2));
    var section = object_get_name(cur_active.object_index);
    
    ini_open("move_data.ini")
    
    var move_type = ini_read_string(section, "m" + move_no + "_type", "Damage");
    var move_amt = ini_read_real(section, "m" + move_no + "_amount", 0);
    switch (move_type) {
        case "Damage":
            with (class_player) {
                hp -= move_amt;
            }        
            break;
        case "Heal":
            with (cur_active) {
                if hp &lt; max_hp hp += move_amt;
            }            
            break;
        default: break;
    }        
    ini_close();    

    //sets the next person in line unless empty in which case, player time!
    if !ds_priority_empty(enemy_queue) cur_active = ds_priority_delete_max(enemy_queue);
    else cur_active = ds_priority_find_max(player_queue);
} else {
    cur_active = ds_priority_find_max(player_queue);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///player combat
if instance_exists(cur_active) {
    if cur_active.object_index == class_player || cur_active.object_index == class_ally {
        //selects a target first
        if select_mode {
            combat_select_target();
            show_debug_message("selecting a target");
        } else if instance_exists(targ) {
            //uses move on the target
            ini_open("move_data.ini");
            var type = ini_read_string("class_player", move_to_use + "_type", "Damage");
            var amt = ini_read_real("class_player", move_to_use + "_amount", 1);
            
            switch (type) {
                case "Damage":
                    with (targ) {
                        hp -= amt;
                    }
                    break;
                case "Heal":
                    with (class_player) {
                        hp += amt;
                    }
                    break;
                default: break;
            }
            
            ini_close();
            
            //repeat
            with (class_button) {
                instance_destroy();
            }
            ds_priority_delete_max(player_queue);
            cur_active = ds_priority_find_max(player_queue);
            show_debug_message('attack targ!');
            
        } else if !init_moves { //create moves
            instance_create(class_player.x - 64, class_player.y, stab_attack);
            instance_create(class_player.x + 64, class_player.y, bandage_heal);
            init_moves = true;
            show_debug_message('moves making');
        }
    }
}
if ds_priority_empty(player_queue) {
    show_debug_message('enemies turn');
    targ = noone;
    init_moves = false;
    //organize priority queues
    for (var i = 0; i &lt; instance_number(class_enemy); i++) {
        //adds all enemies except for the immobilized ones
        var inst = instance_find(class_enemy, i);
        if inst.immobile == 0 ds_priority_add(enemy_queue, inst, inst.spd);
    }
    
    for (var j = 0; j &lt; instance_number(class_ally); j++) {
        var inst = instance_find(class_ally, j);
        if inst.immobile == 0 ds_priority_add(player_queue, inst, inst.spd);
    }

    var player_inst = instance_find(class_player, 0);
    ds_priority_add(player_queue, player_inst, player_inst.spd);
    
    //sets who goes first
    cur_active = ds_priority_delete_max(enemy_queue);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>room</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>rm_combat</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///spawns in all the enemies
if object_exists(original) {
    combat_spawn_objects(original);
}

for (var i = 0; i &lt; array_length_1d(add_enemy); i++) {
    if object_exists(add_enemy[i]) {
        combat_spawn_objects(add_enemy[i]);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///spawns in player and allies
combat_spawn_objects(class_player);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///organize priority queues
for (var i = 0; i &lt; instance_number(class_enemy); i++) {
    //adds all enemies except for the immobilized ones
    var inst = instance_find(class_enemy, i);
    if inst.immobile == 0 ds_priority_add(enemy_queue, inst, inst.spd);
}

for (var j = 0; j &lt; instance_number(class_ally); j++) {
    var inst = instance_find(class_ally, j);
    if inst.immobile == 0 ds_priority_add(player_queue, inst, inst.spd);
}

var player_inst = instance_find(class_player, 0);
ds_priority_add(player_queue, player_inst, player_inst.spd);

//sets who goes first
if first cur_active = ds_priority_delete_max(enemy_queue);
else cur_active = ds_priority_find_max(player_queue);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>room</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>rm_combat</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(0.67);
//Draws the description panel
draw_roundrect_colour_ext(desc_box_left_corner[0], desc_box_left_corner[1], 
    desc_box_left_corner[0] + desc_box_width, 
    desc_box_left_corner[1] + desc_box_height, corner_rad, corner_rad, c_gray,
    c_gray, false);
//Draws the character desc panel
draw_roundrect_colour_ext(char_box_left_corner[0], char_box_left_corner[1], 
    char_box_left_corner[0] + char_box_width, 
    char_box_left_corner[1] + char_box_height, corner_rad, corner_rad, c_gray,
    c_gray, false);
draw_set_alpha(1.0);

if instance_exists(class_player) {
    draw_text_transformed(char_box_left_corner[0] + text_padding, char_box_left_corner[1] + text_padding, 
        object_get_name(class_player), global.textScale, global.textScale, 0);
    draw_text_transformed(char_box_left_corner[0] + text_padding, char_box_left_corner[1] + text_padding + string_height('l') * global.textScale, 
        "Atk: " + string(class_player.atk) + " Def: " + string(class_player.def) +
        "#Spd: " + string(class_player.spd) + " Acc: " + string(class_player.acc), 
        global.textScale, global.textScale, 0);
}

//Draws the options menu
/*draw_set_halign(fa_left);
draw_text_transformed(options_box_left_corner[0] + text_padding,
    options_box_left_corner[1] + text_padding, 
    "Sorry! Inventory#not available#in this demo.",
    textScale, textScale, 0);*/

draw_set_colour(c_white);
//Draws the stats of the selected character
/*if instance_exists(global.charSelect) {
    draw_set_halign(fa_center);
    draw_text_transformed(char_box_left_corner[0] + char_box_width/2, 
        char_box_left_corner[1] + text_padding,
        global.charSelect.name, textScale, textScale, 0);
    draw_set_halign(fa_left);
    draw_text_transformed(char_box_left_corner[0] + text_padding,
        char_box_left_corner[1] + text_padding * 1.5 + string_height('l') * textScale,
        "Attack: " + string(global.charSelect.atk) + "#Defense: " + string(global.charSelect.def) +
        "#Accuracy: " + string(global.charSelect.acc) + "#Speed: " + string(global.charSelect.spd) +
        "#HP: " + string(global.charSelect.hp) + "/" + string(global.charSelect.max_hp),
        textScale, textScale, 0);
} else {
    draw_set_halign(fa_center);
    draw_text_transformed(char_box_left_corner[0] + char_box_width/2, 
        char_box_left_corner[1] + text_padding,
        "No#character#selected.", global.textScale, global.textScale, 0);
}*/
    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
