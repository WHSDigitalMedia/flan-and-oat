<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initalize Variables
barHeight = room_height/4;
initMoves = false;

global.charSelected = noone;
curTurn = -1; //who is currently doing a thing
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Return to overworld after battle
if !instance_exists(class_enemy) {
    with (controller_pause) {
        global.combat = false;
        pause_game();
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//set who goes next
curTurn = ds_priority_find_max(global.combatQueue);

if instance_exists(curTurn) &amp;&amp; curTurn.object_index == class_enemy {
    with (data_player) {
        hp--;
    }
    
    ds_priority_delete_max(global.combatQueue);
}

if ds_priority_empty(global.combatQueue) {
    for (var i = 0; i &lt; instance_number(class_nonGUI); i++) {
        var inst = instance_find(class_nonGUI, i);
        ds_priority_add(global.combatQueue, inst, inst.spd);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cleanup Data Structures
if ds_exists(allyList, ds_type_list) ds_list_destroy(allyList);
if ds_exists(enemyList, ds_type_list) ds_list_destroy(enemyList);
if ds_exists(global.combatQueue, ds_type_priority) ds_priority_destroy(global.combatQueue);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create combat lists

//overall priority queue, ordered by speed
global.combatQueue = ds_priority_create();
for (var i = 0; i &lt; instance_number(class_nonGUI); i++) {
    var inst = instance_find(class_nonGUI, i);
    ds_priority_add(global.combatQueue, inst, inst.spd);
}

/*lists for drawing healthbars*/
//add player and allies to ds_list
allyList = ds_list_create();
if instance_exists(class_player) ds_list_add(allyList, class_player);
if instance_exists(class_ally) {
    for (var k = 0; k &lt; instance_number(class_ally); k++) {
        ds_list_add(allyList, instance_find(class_ally, k));
    }
}

//add enemies to ds_list
enemyList = ds_list_create();
if instance_exists(class_enemy) {
    for (var j = 0; j &lt; instance_number(class_enemy); j++) {
        ds_list_add(enemyList, instance_find(class_enemy, j));
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cleanup Data Structures
if ds_exists(allyList, ds_type_list) ds_list_destroy(allyList);
if ds_exists(enemyList, ds_type_list) ds_list_destroy(enemyList);
if ds_exists(global.combatQueue, ds_type_priority) ds_priority_destroy(global.combatQueue);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Main HUD
draw_set_alpha(0.5);
draw_rectangle_colour(0, room_height - barHeight, room_width, room_height, c_gray, c_gray, c_gray, c_gray, false);
draw_set_alpha(1);

//Draws the stats of the selected character
if instance_exists(global.charSelected) {
    var atk, def, acc, spd;
    atk = string(global.charSelected.atk);
    def = string(global.charSelected.def);
    acc = string(global.charSelected.acc);
    spd = string(global.charSelected.spd);
    
    var obj;
    if global.charSelected == data_player obj = class_player.id;
    else obj = global.charSelected.id;
    
    draw_set_halign(fa_center);
    draw_text_transformed_colour(room_width - 256, room_height - barHeight * 0.9,
            obj, global.textScale, global.textScale, 0, c_white, c_white, c_white, 
            c_white, 1);
    
    draw_set_halign(fa_left);
    draw_text_transformed_colour(room_width - 256, room_height - barHeight * 0.60, 
        "Attack: " + atk + "#Defense: " + def + "#Accuracy: " + acc + "#Speed: " + spd, 
        0.15, 0.15, 0, c_white, c_white, c_white, c_white, 1);
}

//Draws the health bar of player
draw_roundrect_colour_ext(64, room_height - 128, 64 + data_player.hp * 10, room_height - 72, 5, 5, c_red, c_red, false);
draw_sprite_ext(spr_player, image_index, 64, room_height - 64, 2, 2, 0, image_blend, 1);    
draw_set_halign(fa_left);
draw_text_transformed_colour(64, room_height - 64, string(data_player.hp) + "/" + string(data_player.hp),
    0.15, 0.15, 0, c_white, c_white, c_white, c_white, 1);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Enemy Healthbars
for (var i = 0; i &lt; ds_list_size(enemyList); i++) {
    var enemy = ds_list_find_value(enemyList, i);
    if instance_exists(enemy) {
        draw_roundrect_colour_ext(enemy.x - 64, enemy.y + 32, enemy.x - 64 + enemy.hp * 10, enemy.y + 48, 5, 5, c_red, c_red, false);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Select a Move
if instance_exists(curTurn) &amp;&amp; curTurn.object_index == class_player {
    var move;
    
    if global.charSelected == data_player {
        draw_ellipse(class_player.x - 64, class_player.y - 64, class_player.x + 64, class_player.y + 64, true);
    
        if !initMoves {    
            //move array
            move[0] = instance_create(class_player.x - 64, class_player.y + 64, class_move);
            move[1] = instance_create(class_player.x - 64, class_player.y - 64, class_move);
            move[2] = instance_create(class_player.x + 64, class_player.y + 64, class_move);
            move[3] = instance_create(class_player.x + 64, class_player.y - 64, class_move);
            
            for (var i = 0; i &lt; array_length_1d(move); i++) {
                with (move[i]) {
                    action = scr_attack;
                }
            }
            initMoves = true;
        }
    } 
    
    if !instance_exists(class_move) initMoves = false;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Select an Enemy

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
