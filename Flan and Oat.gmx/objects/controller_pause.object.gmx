<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>pause = false;
intensity = 0.7; //the blur intensity
steps = 3; //also affects intensity but it's better to change the above value
draw = false; 
spr = -1; //the sprite the surface will draw
map = false;

global.roomPrev = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//check to see if the gui buttons exist
if !instance_exists(gui_pause_button) &amp;&amp; room != rm_pause_menu &amp;&amp; room != rm_map instance_create(x, y, gui_pause_button);
if !instance_exists(gui_map_button) &amp;&amp; room != rm_pause_menu &amp;&amp; room != rm_map instance_create(x, y, gui_map_button);

if !instance_exists(class_textBox) {
    if keyboard_check_released(vk_escape) || keyboard_check_released(vk_tab){
        if !map {
            //so only tab opens the map, but both tab and esc will close it
            if keyboard_check_released(vk_tab) map = true;
        } else map = false;
        
        if !pause {
            //have to auto save this one or the game won't know where to return to
            save_player_loc(data_player.x, data_player.y, data_player.room_index, true);
            global.roomPrev = room;
            texture_set_interpolation(true);
            pause = true;
            draw = true;
        } else {
            if instance_exists(class_button) with (class_button) instance_destroy();
            pause = false;
            sprite_delete(spr);
            load_player_loc(true);        //return to previous room
            view_enabled = true;
            view_visible[0] = true;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_exists(spr) sprite_delete(spr);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if pause {
    if draw {
        var i, surface;
        for (i = 0; i &lt;= steps; i++) {
            surface[i] = surface_create(view_wport[0] * power(intensity, i), view_hport[0] * power(intensity, i));
            surface_set_target(surface[i]);
            draw_clear_alpha(c_black, 1);
            surface_reset_target();
        }
        surface_set_target(surface[0]);
        draw_surface(application_surface, view_xport[0], view_yport[0]);
        surface_reset_target();
        for (i = 1; i &lt;= steps; i++) {
            surface_set_target(surface[i]);
            draw_surface_ext(surface[i-1], view_xport[0], view_yport[0], intensity, intensity, 0, c_white, 1);
            surface_reset_target();
        }
        for (i = steps - 1; i &gt;= 0; i--) {
            surface_set_target(surface[i]);
            draw_surface_ext(surface[i+1], view_xport[0], view_yport[0], 1 / intensity, 1 / intensity, 0, c_white, 1);
            surface_reset_target();
        }
        spr = sprite_create_from_surface(surface[0], 0, 0, view_wport[0], view_hport[0], false, false, 0, 0);
        for (i = 0; i &lt;= steps; i++) surface_free(surface[i]);
        if map {
            with (class_player) allowMovement = false;
            with (gui_camera) instance_destroy();
            room_goto(rm_map);
        } else {
            with (class_player) persistent = false;
            with (gui_camera) persistent = false;
            room_goto(rm_pause_menu);
        }
        draw = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if pause &amp;&amp; room == rm_pause_menu {
    draw_sprite(spr, 0, 0, 0); 
    
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    
    texture_set_interpolation(false);
    draw_text_transformed_colour(room_width/2, room_height/2 - 64, "Paused",
    global.textScale, global.textScale, 0, c_white, c_white, c_white, c_white, 1);
    
    draw_set_halign(fa_left);
    draw_set_valign(fa_top);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
