<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.pause = false;
global.map = false;
global.inv = false;
global.combat = false;

intensity = 0.7; //the blur intensity
steps = 3; //also affects intensity but it's better to change the above value
global.draw = false; 
spr = -1; //the sprite the surface will draw

global.roomPrev = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//check to see if the gui buttons exist
if room != rm_pause_menu &amp;&amp; room != rm_map &amp;&amp; room != rm_inventory &amp;&amp; room != rm_combat {
    if !instance_exists(gui_pause_button) instance_create(x, y, gui_pause_button);
    if !instance_exists(gui_map_button) instance_create(x, y, gui_map_button);
    if !instance_exists(gui_inv_button) instance_create(x, y, gui_inv_button);
}

//makes sure we aren't interrupting an important NPC dialogue
if !instance_exists(class_textBox) {
    //pressing tab toggles the map
    if keyboard_check_released(vk_tab) &amp;&amp; room != rm_pause_menu &amp;&amp; room != rm_inventory &amp;&amp; room != rm_combat {
        global.map = !global.map;
        pause_game();
    }
    //pressing shift toggles the inventory
    if keyboard_check_released(vk_shift) &amp;&amp; room != rm_pause_menu &amp;&amp; room != rm_map &amp;&amp; room != rm_combat{
        global.inv = !global.inv;
        pause_game();
    }
    //pressing esc acts as a catch all    
    if keyboard_check_released(vk_escape) &amp;&amp; room != rm_combat {    
        pause_game();
        global.map = false;
        global.inv = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_exists(spr) sprite_delete(spr);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.pause {
    if global.draw {
        var i, surface;
        for (i = 0; i &lt;= steps; i++) {
            surface[i] = surface_create(window_get_width() * power(intensity, i), window_get_height() * power(intensity, i));
            surface_set_target(surface[i]);
            draw_clear_alpha(c_black, 1);
            surface_reset_target();
        }
        surface_set_target(surface[0]);
        draw_surface(application_surface, 0, 0);
        surface_reset_target();
        for (i = 1; i &lt;= steps; i++) {
            surface_set_target(surface[i]);
            draw_surface_ext(surface[i-1], 0, 0, intensity, intensity, 0, c_white, 1);
            surface_reset_target();
        }
        for (i = steps - 1; i &gt;= 0; i--) {
            surface_set_target(surface[i]);
            draw_surface_ext(surface[i+1], 0, 0, 1 / intensity, 1 / intensity, 0, c_white, 1);
            surface_reset_target();
        }
        spr = sprite_create_from_surface(surface[0], 0, 0, window_get_width(), window_get_height(), false, false, 0, 0);
        for (i = 0; i &lt;= steps; i++) surface_free(surface[i]);
        
        if global.map {
            with (class_player) allowMovement = false;
            with (gui_camera) instance_destroy();
            room_goto(rm_map);
        } else if global.inv {
            with (class_player) persistent = false;
            with (gui_camera) persistent = false;
            room_goto(rm_inventory);
        } else if global.combat {
            with (class_player) allowMovement = false;
            with (gui_camera) instance_destroy();
            room_goto(rm_combat);
        } else {
            with (class_player) persistent = false;
            with (gui_camera) persistent = false;
            room_goto(rm_pause_menu);
        }
        global.draw = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.pause &amp;&amp; room == rm_pause_menu || room == rm_inventory {
    //draws the blurred background
    draw_sprite(spr, 0, 0, 0); 
    
    //sets the draw alignment
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    
    //no blur
    texture_set_interpolation(false);
    
    //draw to be toggled for the pause menu only
    if room == rm_pause_menu {
        draw_text_transformed_colour(room_width/2, room_height/2 - 64, "Paused",
        global.textScale, global.textScale, 0, c_white, c_white, c_white, c_white, 1);
    }
    
    //reset the draw alignment
    draw_set_halign(fa_left);
    draw_set_valign(fa_top);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
